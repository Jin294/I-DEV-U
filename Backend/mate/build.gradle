plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
//    id 'checkstyle'
}

group = 'ssafy'
version = '0.0.1-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    testImplementation 'junit:junit:4.13.1'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //jwt
    implementation 'com.auth0:java-jwt:4.2.1'

    /*
    Redis
    */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

//tasks.named('test') {
//    useJUnitPlatform()
//}

//checkstyle {
//    maxWarnings = 0 // 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail을 내고 싶다면 이 선언을 추가한다.
//    configFile = file("formatter/naver-intellij-formatter.xml")
//    configProperties = ["suppressionFile": "formatter/naver-intellij-formatter.xml"]
//    toolVersion = "8.24"  // checkstyle 버전 8.24 이상 선언
//}
